{"version":3,"sources":["lib/RemoteData.ts","lib/Types.ts","lib/Http.ts","assets/amcharts/animated/cloudy.svg","assets/amcharts/animated/cloudy-day-1.svg","assets/amcharts/animated/cloudy-day-3.svg","assets/amcharts/animated/cloudy-day-2.svg","assets/amcharts/animated/cloudy-night-1.svg","assets/amcharts/animated/cloudy-night-3.svg","assets/amcharts/animated/cloudy-night-2.svg","assets/amcharts/animated/day.svg","assets/amcharts/animated/night.svg","assets/amcharts/animated/rainy-3.svg","assets/amcharts/animated/rainy-1.svg","assets/amcharts/animated/rainy-2.svg","assets/amcharts/animated/rainy-5.svg","assets/amcharts/animated/rainy-4.svg","assets/amcharts/animated/rainy-6.svg","assets/amcharts/animated/snowy-3.svg","assets/amcharts/animated/rainy-7.svg","assets/amcharts/animated/snowy-1.svg","assets/amcharts/animated/snowy-2.svg","assets/amcharts/animated/snowy-5.svg","assets/amcharts/animated/snowy-4.svg","assets/amcharts/animated/thunder.svg","assets/amcharts/animated/snowy-6.svg","assets/logos/amcharts.svg","assets/logos/github.svg","assets/logos/mapbox.svg","assets/logos/open-weather.png","lib/Util.ts","lib/Store.ts","component/Spacer.tsx","component/Footer.tsx","lib/TransitionState.ts","component/ForecastCard.tsx","component/Forecast.tsx","component/CollapseFade.tsx","component/Search.tsx","component/App.tsx","theme.ts","index.tsx"],"names":["RemoteDataStatus","dec","initial","status","Initial","pending","prevData","Pending","success","data","Success","failure","err","Failure","isPending","rd","isSuccess","isFailure","getData","O","get","url","ajax","getJSON","pipe","Rx","of","RD","E","json","decode","Error","D","val","stringifyParams","A","M","i","k","v","Coords","Place","id","place_name","center","SearchResult","type","features","IntFromFloat","n","Math","round","WeatherIcon","icon","assets","WeatherConditions","description","desc","str","charAt","toUpperCase","slice","CurrentWeather","temp","humidity","wind_speed","wind_deg","weather","NEA","wind","metrePerSec","deg","degToDir","DayWeather","dt","day","night","t","Intl","DateTimeFormat","weekday","format","Date","Forecast","current","daily","arr","length","store","place$","Subject","searchQuery$","nonEmptyQuery$","query","emptyQuery$","search","next","replace","trim","selectPlace","place","searchResult$","merge","asyncScheduler","trailing","Http","seachQuery","queryParams","process","encodeURIComponent","getMapboxUrl","prevRd","forecastData$","lon","lat","String","getOpenweatherUrl","f","forecast","Store","useStyles","root","flexGrow","Spacer","classes","className","theme","background","grey","padding","spacing","logo","display","height","Footer","R","externalLinks","tuple","mapboxLogo","openWeatherLogo","amchartsLogo","component","position","container","map","logoSrc","logoAlt","item","href","target","rel","src","alt","githubLogo","entering","curr","img","width","textAlign","dayLabel","textTransform","daySep","margin","ForecastCard","props","px","pt","justify","alignItems","wrap","zeroMinWidth","variant","noWrap","color","xs","pb","orientation","flexItem","align","gutterBottom","TS","transState","setTransState","stepTransition","ts","forecastData","in","onEntered","onExited","useForecastStateStyles","loader","justifyContent","ForecastState","CollapseFade","timeoutRef","faded","setFaded","open","setTimeout","undefined","setRefTimeout","transitions","duration","shortest","clearTimeout","clearRefTimeout","children","inputRoot","input","flex","searchIcon","clearButton","suggestions","paddingTop","suggestion","transition","Search","setQuery","focused","setFocused","setOpen","pendingWithData","result","value","shouldBeOpen","handleOpen","handleClose","handleQueryClear","onSearch","elevation","placeholder","onFocus","onBlur","onChange","e","handleQueryChange","onClick","places","disabled","button","onPlaceSelect","handlePlaceSelect","App","searchResult","setSearchResult","setForecastData","searchResultSub","subscribe","forecastSub","unsubscribe","maxWidth","mt","mb","palette","primary","main","blue","text","secondary","overrides","MuiCssBaseline","minHeight","flexDirection","document","getElementById"],"mappings":"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","file":"static/js/main.b6c5a435.chunk.js","sourcesContent":["import * as O from 'fp-ts/Option'\nimport { pipe } from 'fp-ts/function'\n\nexport enum RemoteDataStatus {\n  Initial = 'Initial',\n  Pending = 'Pending',\n  Failure = 'Failure',\n  Success = 'Success',\n}\n\ntype Initial = {\n  status: RemoteDataStatus.Initial\n}\n\ntype Pending <A> = {\n  status: RemoteDataStatus.Pending\n  prevData: O.Option<A>\n}\n\ntype Success <A> = {\n  status: RemoteDataStatus.Success\n  data: A\n}\n\ntype Failure = {\n  status: RemoteDataStatus.Failure\n  err: Error\n}\n\ntype Result<A> = Success<A> | Failure\n\nexport type RemoteData<A> = Initial | Pending<A> | Result<A>\n\n// Type constructors\n\nexport const initial = <A> (): RemoteData<A> =>\n  ({ status: RemoteDataStatus.Initial })\n\nexport const pending = <A> (prevData: O.Option<A>): RemoteData<A> =>\n  ({ status: RemoteDataStatus.Pending, prevData })\n\nexport const success = <A> (data: A): RemoteData<A> =>\n  ({ status: RemoteDataStatus.Success, data })\n\nexport const failure = <A> (err: Error): RemoteData<A> =>\n  ({ status: RemoteDataStatus.Failure, err })\n\n// Guards\n\nexport const isInitial = <A>(rd: RemoteData<A>): rd is Initial =>\n  rd.status === RemoteDataStatus.Initial\n\nexport const isPending = <A>(rd: RemoteData<A>): rd is Pending<A> =>\n  rd.status === RemoteDataStatus.Pending\n\nexport const isSuccess = <A>(rd: RemoteData<A>): rd is Success<A> =>\n  rd.status === RemoteDataStatus.Success\n\nexport const isFailure = <A>(rd: RemoteData<A>): rd is Failure =>\n  rd.status === RemoteDataStatus.Failure\n\nexport const isResult = <A>(rd: RemoteData<A>): rd is Result<A> =>\n  isSuccess(rd) || isFailure(rd)\n\n// Helpers\n\nexport const map = <A, B> (f: (data: A) => B) => (rd: RemoteData<A>): RemoteData<B> =>\n  isSuccess(rd) ? success(f(rd.data)) : isPending(rd) ? pending(pipe(rd.prevData, O.map(f))) : rd\n\nexport const getData = <A> (rd: RemoteData<A>): O.Option<A> =>\n  isSuccess(rd) ? O.some(rd.data) : isPending(rd) ? rd.prevData : O.none\n","import * as A from 'fp-ts/Array'\nimport * as NEA from 'fp-ts/NonEmptyArray'\nimport { pipe } from 'fp-ts/function'\nimport * as D from 'io-ts/Decoder'\nimport * as assets from 'assets'\nimport { capitalize, displayWind, weekDayFromTimestamp } from 'lib/Util'\n\nexport const Coords = D.tuple(D.number, D.number)\n\nexport type Coords = D.TypeOf<typeof Coords>\n\nexport const Place = D.type({\n  id: D.string,\n  place_name: D.string,\n  center: Coords,\n})\n\nexport type Place = D.TypeOf<typeof Place>\n\nexport const SearchResult = pipe(\n  D.type({\n    type: D.literal('FeatureCollection'),\n    features: D.array(Place),\n  }),\n  D.map(({ features }) => features),\n)\n\nexport type SearchResult = D.TypeOf<typeof SearchResult>\n\n// Weather\n\nexport const IntFromFloat = pipe(\n  D.number,\n  D.map(n => Math.round(n)),\n)\n\nexport const nonEmptyArray = <A> (dec: D.Decoder<unknown, A>) => pipe(\n  D.array(dec),\n  D.refine(A.isNonEmpty, 'non empty array')\n)\n\nexport const WeatherIcon = pipe(\n  D.literal(\n    '01d', '01n',\n    '02d', '02n',\n    '03d', '03n',\n    '04d', '04n',\n    '09d', '09n',\n    '10d', '10n',\n    '11d', '11n',\n    '13d', '13n',\n    '50d', '50n'\n  ),\n  D.map((icon): string => {\n    switch (icon) {\n      case '01d':\n        return assets.day\n      case '01n':\n        return assets.night\n      case '02d':\n        return assets.cloudyDay1\n      case '02n':\n        return assets.cloudyNight1\n      case '03d':\n        return assets.cloudyDay3\n      case '03n':\n        return assets.cloudyNight3\n      case '04d':\n        return assets.cloudy\n      case '04n':\n        return assets.cloudy\n      case '09d':\n        return assets.rainy3\n      case '09n':\n        return assets.rainy5\n      case '10d':\n        return assets.rainy6\n      case '10n':\n        return assets.rainy6\n      case '11d':\n        return assets.thunder\n      case '11n':\n        return assets.thunder\n      case '13d':\n        return assets.snowy3\n      case '13n':\n        return assets.snowy5\n      case '50d':\n        return assets.cloudy\n      case '50n':\n        return assets.cloudy\n    }\n  })\n)\n\nexport const WeatherConditions = D.type({\n  icon: WeatherIcon,\n  description: pipe(\n    D.string,\n    D.map(desc => capitalize(desc))\n  ),\n})\n\nexport const CurrentWeather = pipe(\n  D.type({\n    temp: IntFromFloat,\n    humidity: D.number,\n    wind_speed: D.number,\n    wind_deg: D.number,\n    weather: nonEmptyArray(WeatherConditions),\n  }),\n  D.map(data => ({\n    temp: data.temp,\n    humidity: data.humidity,\n    weather: NEA.head(data.weather),\n    wind: displayWind(data.wind_speed, data.wind_deg),\n  })),\n)\n\nexport const DayWeather = pipe(\n  D.type({\n    dt: D.number,\n    temp: D.type({\n      day: IntFromFloat,\n      night: IntFromFloat,\n    }),\n  }),\n  D.map(data => ({\n    temp: data.temp,\n    day: weekDayFromTimestamp(data.dt),\n  }))\n)\n\nexport const Forecast = D.type({\n  current: CurrentWeather,\n  daily: pipe(\n    D.array(DayWeather),\n    D.parse(arr => arr.length >= 4\n      ? D.success(arr)\n      : D.failure(arr, 'array with at least 4 elements')\n    ),\n  ),\n})\n\nexport type Forecast = D.TypeOf<typeof Forecast>\n\nexport type ForecastData = {\n  place: Place\n  forecast: Forecast\n}\n","import { ajax } from 'rxjs/ajax'\nimport { Observable, of } from 'rxjs'\nimport * as Rx from 'rxjs/operators'\nimport * as D from 'io-ts/Decoder'\nimport * as E from 'fp-ts/Either'\nimport * as O from 'fp-ts/Option'\nimport { pipe } from 'fp-ts/function'\nimport * as RD from 'lib/RemoteData'\n\nexport const get = <A> (url: string, dec: D.Decoder<unknown, A>): Observable<RD.RemoteData<A>> =>\n  ajax.getJSON(url).pipe(\n    Rx.catchError((err: unknown) => of(RD.failure<A>(E.toError(err)))),\n    Rx.map(json => pipe(\n      dec.decode(json),\n      E.fold(\n        err => RD.failure<A>(new Error(D.draw(err))),\n        val => RD.success<A>(val),\n      ),\n    )),\n    Rx.startWith(RD.pending<A>(O.none)),\n  )\n","export default __webpack_public_path__ + \"static/media/cloudy.24f9a474.svg\";","export default __webpack_public_path__ + \"static/media/cloudy-day-1.213f9a41.svg\";","export default __webpack_public_path__ + \"static/media/cloudy-day-3.2164d3c4.svg\";","export default __webpack_public_path__ + \"static/media/cloudy-day-2.7fb7ecfc.svg\";","export default __webpack_public_path__ + \"static/media/cloudy-night-1.4e6a9fde.svg\";","export default __webpack_public_path__ + \"static/media/cloudy-night-3.e2327d50.svg\";","export default __webpack_public_path__ + \"static/media/cloudy-night-2.4a43954d.svg\";","export default __webpack_public_path__ + \"static/media/day.c33ef664.svg\";","export default __webpack_public_path__ + \"static/media/night.6cf4adcd.svg\";","export default __webpack_public_path__ + \"static/media/rainy-3.8c33eccc.svg\";","export default __webpack_public_path__ + \"static/media/rainy-1.44fb8223.svg\";","export default __webpack_public_path__ + \"static/media/rainy-2.523a54b8.svg\";","export default __webpack_public_path__ + \"static/media/rainy-5.a8183a99.svg\";","export default __webpack_public_path__ + \"static/media/rainy-4.9988edfd.svg\";","export default __webpack_public_path__ + \"static/media/rainy-6.130d6250.svg\";","export default __webpack_public_path__ + \"static/media/snowy-3.b5422f54.svg\";","export default __webpack_public_path__ + \"static/media/rainy-7.9305701c.svg\";","export default __webpack_public_path__ + \"static/media/snowy-1.27113af0.svg\";","export default __webpack_public_path__ + \"static/media/snowy-2.3be1e2a1.svg\";","export default __webpack_public_path__ + \"static/media/snowy-5.c90a1604.svg\";","export default __webpack_public_path__ + \"static/media/snowy-4.37766ef2.svg\";","export default __webpack_public_path__ + \"static/media/thunder.19ff3c30.svg\";","export default __webpack_public_path__ + \"static/media/snowy-6.dce3f5e7.svg\";","export default __webpack_public_path__ + \"static/media/amcharts.38563fdb.svg\";","export default __webpack_public_path__ + \"static/media/github.401645e3.svg\";","export default __webpack_public_path__ + \"static/media/mapbox.c75a8021.svg\";","export default __webpack_public_path__ + \"static/media/open-weather.4595304d.png\";","import * as A from 'fp-ts/Array'\nimport * as M from 'fp-ts/Monoid'\nimport { Coords } from 'lib/Types'\n\ntype Param = [string, string]\n\nconst stringifyParams: (params: Array<Param>) => string =\n  A.foldMapWithIndex(M.monoidString)((i, [k, v]) => i === 0 ? `?${k}=${v}` : `&${k}=${v}`)\n\nexport const getMapboxUrl = (seachQuery: string): string => {\n  const queryParams = stringifyParams([\n    ['access_token', process.env.REACT_APP_MAPBOX_TOKEN || 'missing-token'],\n    ['types', 'place,postcode'],\n    ['limit', '5'],\n  ])\n\n  return `https://api.mapbox.com/geocoding/v5/mapbox.places/${encodeURIComponent(seachQuery)}.json${queryParams}`\n}\n\nexport const getOpenweatherUrl = ([lon, lat]: Coords): string => {\n  const queryParams = stringifyParams([\n    ['lat', String(lat)],\n    ['lon', String(lon)],\n    ['appid', process.env.REACT_APP_OPENWEATHER_TOKEN || 'missing-token'],\n    ['units', 'metric'],\n    ['exclude', 'minutely,hourly'],\n  ])\n\n  return 'https://api.openweathermap.org/data/2.5/onecall' + queryParams\n}\n\nconst degToDir = (deg: number): string => {\n  switch (true) {\n    case deg < 22.5:\n      return 'N'\n    case deg < 67.5:\n      return 'NE'\n    case deg < 112.5:\n      return 'E'\n    case deg < 157.5:\n      return 'SE'\n    case deg < 202.5:\n      return 'S'\n    case deg < 247.5:\n      return 'SW'\n    case deg < 292.5:\n      return 'W'\n    case deg < 373.5:\n      return 'NW'\n    default:\n      return 'N'\n  }\n}\n\nexport const displayWind = (metrePerSec: number, deg: number): string =>\n  `${degToDir(deg)} ${metrePerSec} m/s`\n\nexport const capitalize = (str: string): string =>\n  str.charAt(0).toUpperCase() + str.slice(1)\n\nexport const weekDayFromTimestamp = (t: number): string =>\n  new Intl.DateTimeFormat('en-US', { weekday: 'short' }).format(new Date(t * 1000))\n","import * as O from 'fp-ts/Option'\nimport { Subject, asyncScheduler, merge } from 'rxjs'\nimport * as Rx from 'rxjs/operators'\nimport * as RD from 'lib/RemoteData'\nimport * as Http from 'lib/Http'\nimport { Forecast, ForecastData, Place, SearchResult } from 'lib/Types'\nimport { getMapboxUrl, getOpenweatherUrl } from 'lib/Util'\n\nconst searchThrottleMs = 400\nconst forecaseThrottleMs = 1200\n\nconst Store = () => {\n  const place$ = new Subject<Place>()\n  const searchQuery$ = new Subject<string>()\n  const nonEmptyQuery$ = searchQuery$.pipe(Rx.filter(query => query !== ''))\n  const emptyQuery$ = searchQuery$.pipe(Rx.filter(query => query === ''))\n  const searchResult$ = merge(\n    emptyQuery$.pipe(\n      Rx.mapTo(RD.success<SearchResult>([])),\n    ),\n    nonEmptyQuery$.pipe(\n      Rx.mapTo(RD.pending<SearchResult>(O.none)),\n    ),\n    nonEmptyQuery$.pipe(\n      Rx.throttleTime(searchThrottleMs, asyncScheduler, { trailing: true }),\n      Rx.switchMap(query => Http.get(getMapboxUrl(query), SearchResult)),\n    ),\n  ).pipe(\n    Rx.scan(\n      (prevRd, rd): RD.RemoteData<SearchResult> =>\n        RD.isPending(rd)\n          ? RD.pending(RD.getData(prevRd))\n          : RD.isFailure(rd)\n            ? RD.success([])\n            : rd,\n      RD.initial<SearchResult>(),\n    ),\n  )\n  const forecastData$ = place$.pipe(\n    Rx.throttleTime(forecaseThrottleMs),\n    Rx.switchMap(place => Http.get(getOpenweatherUrl(place.center), Forecast).pipe(\n      Rx.map(RD.map((forecast): ForecastData => ({ place, forecast }))),\n    )),\n    Rx.startWith(RD.initial<ForecastData>()),\n  )\n\n  return {\n    search: (query: string) => searchQuery$.next(query.replace(/,+/g, ' ').trim()),\n    selectPlace: (place: Place) => place$.next(place),\n    searchResult$,\n    forecastData$: forecastData$,\n  }\n}\n\nexport const store = Store()\n","import * as R from 'react'\nimport * as M from '@material-ui/core'\n\nconst useStyles = M.makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n})\n\nexport const Spacer: R.FC = () => {\n  const classes = useStyles()\n\n  return <div className={classes.root} />\n}\n","import * as R from 'react'\nimport * as M from '@material-ui/core'\nimport { tuple } from 'fp-ts/function'\nimport { amchartsLogo, githubLogo, mapboxLogo, openWeatherLogo } from 'assets'\nimport { Spacer } from 'component/Spacer'\n\nconst useStyles = M.makeStyles(theme => ({\n  root: {\n    background: M.colors.grey[900],\n    padding: theme.spacing(4, 6),\n  },\n  logo: {\n    display: 'block',\n    height: 32,\n  },\n}))\n\nexport const Footer: R.FC = R.memo(() => {\n  const classes = useStyles()\n  const externalLinks = [\n    //     url                          logoSrc           logoAlt\n    tuple('https://mapbox.com'    ,     mapboxLogo,      'mapbox logo'),\n    tuple('https://openweathermap.org', openWeatherLogo, 'OpenWeather logo'),\n    tuple('https://amcharts.com',       amchartsLogo,    'amCharts logo'),\n  ]\n\n  return (\n    <M.AppBar className={classes.root} component=\"footer\" position=\"static\">\n      <M.Grid container spacing={3}>\n        {externalLinks.map(([url, logoSrc, logoAlt]) => (\n          <M.Grid key={url} item>\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n              <img className={classes.logo} src={logoSrc} alt={logoAlt} />\n            </a>\n          </M.Grid>\n        ))}\n\n        <Spacer />\n\n        <M.Grid item>\n          <a href=\"https://github.com/egorgrodno/weather-forecast\" rel=\"noopener noreferrer\">\n            <img className={classes.logo} src={githubLogo} alt=\"GitHub logo\" />\n          </a>\n        </M.Grid>\n      </M.Grid>\n    </M.AppBar>\n  )\n})\n","export type TransitionState <A> =\n  | { status: 'initial' }\n  | { status: 'leaving',  curr: A, next: A }\n  | { status: 'entering', curr: A }\n  | { status: 'entered',  curr: A }\n\nexport const initial = <A> (): TransitionState<A> =>\n  ({ status: 'initial' })\n\nexport const leaving = <A> (curr: A, next: A): TransitionState<A> =>\n  ({ status: 'leaving', curr, next })\n\nexport const entering = <A> (curr: A): TransitionState<A> =>\n  ({ status: 'entering', curr })\n\nexport const entered = <A> (curr: A): TransitionState<A> =>\n  ({ status: 'entered', curr })\n\nexport const step = <A> (ts: TransitionState<A>): TransitionState<A> => {\n  switch (ts.status) {\n    case 'initial':\n    case 'entered':\n      return ts\n\n    case 'leaving':\n      return entering(ts.next)\n\n    case 'entering':\n      return entered(ts.curr)\n  }\n}\n","import * as R from 'react'\nimport * as M from '@material-ui/core'\nimport { Place, Forecast } from 'lib/Types'\n\ntype Props = {\n  place: Place\n  forecast: Forecast\n}\n\n// base offset in units\nconst x = 4\nconst y = 3\n\nconst useStyles = M.makeStyles(theme => ({\n  img: {\n    display: 'block',\n    width: '100%',\n  },\n  temp: {\n    padding: theme.spacing(5.5, 0),\n  },\n  day: {\n    textAlign: 'center',\n  },\n  dayLabel: {\n    textTransform: 'uppercase',\n  },\n  daySep: {\n    margin: theme.spacing(0.5, 0),\n  },\n}))\n\nexport const ForecastCard: R.FC<Props> = props => {\n  const classes = useStyles()\n\n  return (\n    <M.Paper>\n      <M.Box component=\"header\" px={x} pt={y}>\n        <M.Grid container justify=\"space-between\" alignItems=\"center\" wrap=\"nowrap\">\n          <M.Grid item zeroMinWidth>\n            <M.Typography variant=\"h5\" noWrap>\n              {props.place.place_name}\n            </M.Typography>\n            <M.Typography variant=\"subtitle1\" noWrap>\n              {props.forecast.current.weather.description}\n            </M.Typography>\n          </M.Grid>\n\n          <M.Grid item>\n            <M.Typography variant=\"body1\" color=\"textSecondary\" noWrap>\n              {props.forecast.current.wind}\n            </M.Typography>\n            <M.Typography variant=\"body1\" color=\"textSecondary\" noWrap>\n              Humidity {props.forecast.current.humidity}%\n            </M.Typography>\n          </M.Grid>\n        </M.Grid>\n      </M.Box>\n\n      <M.Box>\n        <M.Grid container justify=\"space-between\" alignItems=\"center\" wrap=\"nowrap\">\n          <M.Grid item xs={6}>\n            <img\n              className={classes.img}\n              src={props.forecast.current.weather.icon}\n              alt={props.forecast.current.weather.description}\n            />\n          </M.Grid>\n\n          <M.Grid item xs={6}>\n            <M.Typography className={classes.temp} variant=\"h1\">\n              {props.forecast.current.temp}&deg;\n            </M.Typography>\n          </M.Grid>\n        </M.Grid>\n      </M.Box>\n\n      <M.Box component=\"footer\" pb={y}>\n        <M.Grid container justify=\"space-between\" alignItems=\"center\" wrap=\"nowrap\">\n          {props.forecast.daily.slice(1, 6).map((day, i) => (\n            <R.Fragment key={i}>\n              {i > 0 && <M.Divider className={classes.daySep} orientation=\"vertical\" flexItem />}\n\n              <M.Grid className={classes.day} item xs={3}>\n                <M.Typography\n                  className={classes.dayLabel}\n                  variant=\"body2\"\n                  align=\"center\"\n                  gutterBottom\n                  noWrap\n                >\n                  {day.day}\n                </M.Typography>\n\n                <M.Typography variant=\"body2\" align=\"center\" noWrap>\n                  {day.temp.day}\n                </M.Typography>\n\n                <M.Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" noWrap>\n                  {day.temp.night}\n                </M.Typography>\n              </M.Grid>\n            </R.Fragment>\n          ))}\n        </M.Grid>\n      </M.Box>\n    </M.Paper>\n  )\n}\n","import * as R from 'react'\nimport * as RD from 'lib/RemoteData'\nimport * as M from '@material-ui/core'\nimport * as TS from 'lib/TransitionState'\nimport { ForecastData } from 'lib/Types'\nimport { ForecastCard } from 'component/ForecastCard'\n\ntype Props = {\n  forecastData: RD.RemoteData<ForecastData>\n}\n\ntype Transition = TS.TransitionState<RD.RemoteData<ForecastData>>\n\nexport const Forecast: R.FC<Props> = props => {\n  const [transState, setTransState] = R.useState<Transition>(TS.initial)\n  const stepTransition = () => setTransState(TS.step(transState))\n\n  R.useEffect(() => {\n    if (!RD.isInitial(props.forecastData)) {\n      switch (transState.status) {\n        case 'initial':\n          return setTransState(TS.entering(props.forecastData))\n\n        case 'leaving':\n        case 'entering':\n        case 'entered':\n          return setTransState(TS.leaving(transState.curr, props.forecastData))\n      }\n    }\n  }, [props.forecastData])\n\n  if (transState.status === 'initial') {\n    return null\n  } else {\n    return (\n      <M.Fade\n        in={transState.status !== 'leaving'}\n        onEntered={stepTransition}\n        onExited={stepTransition}\n      >\n        <div>\n          <ForecastState forecastData={transState.curr} />\n        </div>\n      </M.Fade>\n    )\n  }\n}\n\nconst useForecastStateStyles = M.makeStyles({\n  loader: {\n    height: 370,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n})\n\nexport const ForecastState: R.FC<Props> = props => {\n  const classes = useForecastStateStyles()\n\n  switch (props.forecastData.status) {\n    case RD.RemoteDataStatus.Initial:\n      return null\n\n    case RD.RemoteDataStatus.Pending:\n      return (\n        <div className={classes.loader}>\n          <M.CircularProgress />\n        </div>\n      )\n\n    case RD.RemoteDataStatus.Failure:\n      return (\n        <M.Typography color=\"error\">\n          Network request failed, try again later.\n        </M.Typography>\n      )\n\n    case RD.RemoteDataStatus.Success:\n      return (\n        <ForecastCard\n          place={props.forecastData.data.place}\n          forecast={props.forecastData.data.forecast}\n        />\n      )\n  }\n}\n","import * as R from 'react'\nimport * as M from '@material-ui/core'\n\ntype Props = {\n  open: boolean\n  children: R.ReactElement\n}\n\ntype TimeoutRef = R.MutableRefObject<NodeJS.Timeout | undefined>\n\nconst setRefTimeout = (timeoutRef: TimeoutRef, f: () => void, n: number): void => {\n  timeoutRef.current = setTimeout(() => {\n    timeoutRef.current = undefined\n    f()\n  }, n)\n}\n\nconst clearRefTimeout = (timeoutRef: TimeoutRef): void => {\n  if (timeoutRef.current !== undefined) {\n    clearTimeout(timeoutRef.current)\n    timeoutRef.current = undefined\n  }\n}\n\nexport const CollapseFade: R.FC<Props> = props => {\n  const theme = M.useTheme()\n  const timeoutRef = R.useRef<NodeJS.Timeout>()\n  const [faded, setFaded] = R.useState(false)\n\n  R.useEffect(() => {\n    if (props.open) {\n      setRefTimeout(timeoutRef, () => setFaded(true), theme.transitions.duration.shortest)\n    } else {\n      clearRefTimeout(timeoutRef)\n      setFaded(false)\n    }\n  }, [props.open])\n\n  return (\n    <M.Collapse in={props.open}>\n      <M.Fade in={faded}>\n        {props.children}\n      </M.Fade>\n    </M.Collapse>\n  )\n}\n","import * as R from 'react'\nimport * as M from '@material-ui/core'\nimport * as I from '@material-ui/icons'\nimport * as A from 'fp-ts/Array'\nimport * as O from 'fp-ts/Option'\nimport { pipe } from 'fp-ts/function'\nimport * as RD from 'lib/RemoteData'\nimport { Place, SearchResult } from 'lib/Types'\nimport { CollapseFade } from 'component/CollapseFade'\n\ntype Props = {\n  result: RD.RemoteData<SearchResult>\n  onSearch: (query: string) => void\n  onPlaceSelect: (place: Place) => void\n}\n\nconst useStyles = M.makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    height: 60,\n  },\n  inputRoot: {\n    padding: theme.spacing(0.75, 0.5, 0.25),\n    display: 'flex',\n    alignItems: 'center',\n  },\n  input: {\n    flex: 1,\n  },\n  searchIcon: {\n    margin: theme.spacing(1.5, 2),\n  },\n  clearButton: {\n    padding: theme.spacing(1),\n    margin: theme.spacing(0, 1, 0, 0.5),\n  },\n  suggestions: {\n    paddingTop: 0,\n  },\n  suggestion: {\n    transition: 'none',\n  },\n}))\n\nexport const Search: R.FC<Props> = props => {\n  const classes = useStyles()\n  const [query, setQuery] = R.useState('')\n  const [focused, setFocused] = R.useState(false)\n  const [open, setOpen] = R.useState(false)\n  const pendingWithData =\n    RD.isPending(props.result)\n    && O.isSome(props.result.prevData)\n    && A.isNonEmpty(props.result.prevData.value)\n  const shouldBeOpen = query !== '' && (pendingWithData || RD.isSuccess(props.result))\n  const handleFocus = () => {\n    setFocused(true)\n    if (shouldBeOpen) {\n      handleOpen()\n    }\n  }\n  const handleBlur = () => {\n    setFocused(false)\n    handleClose()\n  }\n  const handleOpen = () => {\n    setOpen(true)\n  }\n  const handleClose = () => {\n    setOpen(false)\n  }\n  const handleQueryChange = (query: string) => {\n    if (query === '') {\n      handleClose()\n    }\n    setQuery(query)\n    props.onSearch(query)\n  }\n  const handleQueryClear = () => {\n    setQuery('')\n    props.onSearch(query)\n  }\n  const handlePlaceSelect = (place: Place) => {\n    handleQueryClear()\n    props.onPlaceSelect(place)\n  }\n\n  if (shouldBeOpen && focused && !open) {\n    handleOpen()\n  }\n\n  return (\n    <div className={classes.root}>\n      <M.Paper elevation={focused ? 3 : 1}>\n        <div className={classes.inputRoot}>\n          <I.Search className={classes.searchIcon} />\n\n          <M.InputBase\n            className={classes.input}\n            placeholder=\"Seach location\"\n            value={query}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            onChange={e => handleQueryChange(e.target.value)}\n          />\n\n          {query !== '' && (\n            <M.IconButton className={classes.clearButton} onClick={handleQueryClear}>\n              <I.Clear />\n            </M.IconButton>\n          )}\n        </div>\n\n        <CollapseFade open={open}>\n          <M.List className={classes.suggestions}>\n            {pipe(\n              RD.getData(props.result),\n              O.map((places): R.ReactNode => (\n                <>\n                  {A.isEmpty(places) && query !== '' && (\n                    <M.ListItem\n                      className={classes.suggestion}\n                      disabled={RD.isPending(props.result)}\n                    >\n                      No results\n                    </M.ListItem>\n                  )}\n                  {places.map(place => (\n                    <M.ListItem\n                      key={place.id}\n                      className={classes.suggestion}\n                      button\n                      disabled={RD.isPending(props.result)}\n                      onClick={() => handlePlaceSelect(place)}\n                    >\n                      {place.place_name}\n                    </M.ListItem>\n                  ))}\n                </>\n              )),\n              O.toNullable,\n            )}\n          </M.List>\n        </CollapseFade>\n      </M.Paper>\n    </div>\n  )\n}\n","import * as R from 'react'\nimport * as M from '@material-ui/core'\nimport * as RD from 'lib/RemoteData'\nimport { store } from 'lib/Store'\nimport { ForecastData, SearchResult } from 'lib/Types'\nimport { Footer } from 'component/Footer'\nimport { Forecast } from 'component/Forecast'\nimport { Search } from 'component/Search'\nimport { Spacer } from 'component/Spacer'\n\nexport const App: R.FC = () => {\n  const [searchResult, setSearchResult] = R.useState(RD.initial<SearchResult>())\n  const [forecastData, setForecastData] = R.useState(RD.initial<ForecastData>())\n\n  R.useEffect(() => {\n    const searchResultSub = store.searchResult$.subscribe(result => {\n      setSearchResult(result)\n    })\n    const forecastSub = store.forecastData$.subscribe(data => {\n      setForecastData(data)\n    })\n    return () => {\n      searchResultSub.unsubscribe()\n      forecastSub.unsubscribe()\n    }\n  }, [])\n  R.useEffect(() => {\n    store.selectPlace({\n      id: 'initial_place',\n      place_name: 'Grodno, Belarus',\n      center: [23.81667, 53.66667],\n    })\n  }, [])\n\n  return (\n    <>\n      <M.Container maxWidth=\"xs\">\n        <M.Box mt={8} mb={1.5}>\n          <Search result={searchResult} onSearch={store.search} onPlaceSelect={store.selectPlace} />\n        </M.Box>\n\n        <Forecast forecastData={forecastData} />\n      </M.Container>\n\n      <Spacer />\n\n      <Footer />\n    </>\n  )\n}\n","import * as M from '@material-ui/core'\n\nexport const theme = M.createMuiTheme({\n  palette: {\n    primary: {\n      main: M.colors.blue[600],\n    },\n    text: {\n      primary: '#4b5d6a',\n      secondary: '#a1adb5',\n    }\n  },\n  overrides: {\n    MuiCssBaseline: {\n      '@global': {\n        '#root': {\n          minHeight: '100vh',\n          display: 'flex',\n          flexDirection: 'column',\n        },\n      },\n    },\n  },\n})\n","import * as R from 'react'\nimport * as RD from 'react-dom'\nimport * as M from '@material-ui/core'\nimport { App } from 'component/App'\nimport { theme } from 'theme'\n\nRD.render(\n  <R.StrictMode>\n    <M.ThemeProvider theme={theme}>\n      <M.CssBaseline />\n      <App />\n    </M.ThemeProvider>\n  </R.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}